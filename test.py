from datetime import datetime
import json
import time

import telebot
from telebot import types
import pytz  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot('–í–ê–® –¢–û–ö–ï–ù')

# –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –†–æ—Å—Å–∏–∏
with open('timezones.json', 'br') as f:
    timezones = json.load(f)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –∫—Ä—É—Ç–æ–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è. –í–≤–µ–¥–∏—Ç–µ /time, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è!")

# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "–Ø –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/time - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è\n"
        "/timezone - –≤—ã–±—Ä–∞—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å\n"
        "/countdown - –Ω–∞—á–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    bot.send_message(message.chat.id, help_text)

# –ö–æ–º–∞–Ω–¥–∞ /time —Å –≤—ã–±–æ—Ä–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
@bot.message_handler(commands=['time'])
def send_time(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)
    buttons = [types.KeyboardButton(tz) for tz in timezones.keys()]
    markup.add(*buttons)
    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_timezone_selection)

def process_timezone_selection(message):
    timezone = timezones.get(message.text)
    if timezone:
        now = datetime.now(pytz.timezone(timezone))
        bot.send_message(message.chat.id, f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ {message.text}: {now.strftime('%Y-%m-%d %H:%M:%S')}")
    else:
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –ö–æ–º–∞–Ω–¥–∞ /countdown –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
@bot.message_handler(commands=['countdown'])
def start_countdown(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç—Å—á—ë—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö:")
    bot.register_next_step_handler(msg, process_countdown)

def process_countdown(message):
    try:
        countdown_time = int(message.text)
        bot.send_message(message.chat.id, f"–û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç –Ω–∞—á–∞–ª—Å—è –Ω–∞ {countdown_time} —Å–µ–∫—É–Ω–¥!")
        bot.send_chat_action(message.chat.id, 'typing')  # –ü–æ–∫–∞–∑–∞—Ç—å "–ø–µ—á–∞—Ç–∞–µ—Ç..." –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
        bot.send_message(message.chat.id, "–í—Ä–µ–º—è –ø–æ—à–ª–æ! üïí")
        for i in range(countdown_time, 0, -1):
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id + 2, text=f"–û—Å—Ç–∞–ª–æ—Å—å: {i} —Å–µ–∫—É–Ω–¥")
            time.sleep(1)
        bot.send_message(message.chat.id, "‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ!")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
